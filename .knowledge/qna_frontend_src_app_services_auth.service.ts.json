{"is_source_file": true, "format": "TypeScript", "description": "An Angular service class providing authentication functionalities such as signup, login, logout, and user profile management.", "external_files": ["../../environments/environment", "../models/api.models"], "external_methods": ["isPlatformBrowser", "inject"], "published": ["AuthService"], "classes": [{"name": "AuthService", "description": "Service for handling authentication logic, token management, and user state."}], "methods": [{"name": "getToken", "description": "Returns the stored JWT token if available, or null."}, {"name": "isAuthenticated", "description": "Checks if a user is currently authenticated based on token existence."}, {"name": "signup", "description": "Calls backend to create a new user account; updates user state on success."}, {"name": "login", "description": "Authenticates user via OAuth2 password flow and stores the received token."}, {"name": "loadMe", "description": "Retrieves the current user's profile from backend and updates user state."}, {"name": "logout", "description": "Clears the authentication token and resets user state."}], "calls": ["this.http.post", "this.http.get", "this.currentUserSubject.next"], "search-terms": ["AuthService", "Angular authentication", "Token management", "User profile", "RxJS BehaviorSubject"], "state": 2, "file_id": 24, "knowledge_revision": 116, "git_revision": "918b0cb25c70a4c5a54dd43ff3facee3da27da85", "revision_history": [{"49": ""}, {"96": ""}, {"97": ""}, {"98": "cde3852e4c59a5f54261ec2d056cc89a1e9e63a5"}, {"116": "918b0cb25c70a4c5a54dd43ff3facee3da27da85"}], "ctags": [{"_type": "tag", "name": "AuthService", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/services/auth.service.ts", "pattern": "/^export class AuthService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/services/auth.service.ts", "pattern": "/^    const body = new HttpParams()$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/services/auth.service.ts", "pattern": "/^    const headers = new HttpHeaders({ 'Content-Type': 'application\\/x-www-form-urlencoded' });$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/services/auth.service.ts", "pattern": "/^  private http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "s", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/services/auth.service.ts", "pattern": "/^        const s = this.storage;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "s", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/services/auth.service.ts", "pattern": "/^    const s = this.storage;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/services/auth.service.ts", "pattern": "/^    const url = `${environment.apiBaseUrl}\\/auth\\/login`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/services/auth.service.ts", "pattern": "/^    const url = `${environment.apiBaseUrl}\\/auth\\/me`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/services/auth.service.ts", "pattern": "/^    const url = `${environment.apiBaseUrl}\\/auth\\/signup`;$/", "language": "TypeScript", "kind": "constant"}], "hash": "3e83cade9299cac469b2060868e6e88b", "format-version": 4, "code-base-name": "qna_frontend", "filename": "qna_frontend/src/app/services/auth.service.ts", "fields": [{"name": "private http = inject(HttpClient);", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}]}
{"is_source_file": true, "format": "TypeScript", "description": "This file defines an authentication HTTP interceptor function for an Angular application. It intercepts outgoing HTTP requests to add an Authorization header with a bearer token obtained from an AuthService.", "external_files": ["@angular/common/http", "@angular/core", "./auth.service"], "external_methods": ["HttpInterceptorFn", "inject", "AuthService.getToken"], "published": ["authInterceptor"], "classes": [], "methods": [{"name": "authInterceptor", "description": "A function acting as an HTTP interceptor that adds an Authorization header with a bearer token to outgoing requests if a token is available."}], "calls": ["inject(AuthService)", "auth.getToken()", "req.clone()", "next()"], "search-terms": ["auth interceptor", "HttpInterceptorFn", "Angular", "Authorization header", "Bearer token", "HTTP request modification"], "state": 2, "file_id": 25, "knowledge_revision": 51, "git_revision": "", "ctags": [{"_type": "tag", "name": "authInterceptor", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/services/auth.interceptor.ts", "pattern": "/^export const authInterceptor: HttpInterceptorFn = (req, next) => {$/", "language": "TypeScript", "kind": "constant"}], "hash": "ab323d60b195b6b2b8e4babde6f517bf", "format-version": 4, "code-base-name": "qna_frontend", "filename": "qna_frontend/src/app/services/auth.interceptor.ts", "revision_history": [{"51": ""}]}
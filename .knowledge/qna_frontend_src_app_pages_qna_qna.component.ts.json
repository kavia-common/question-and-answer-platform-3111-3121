{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular component named QnaComponent, which manages a Q&amp;A interface with question and answer lists, sidebar toggle, and form submission.", "external_files": ["../../components/sidebar/sidebar.component", "../../services/qna.service", "./qna.component.html", "./qna.component.css"], "external_methods": ["isPlatformBrowser", "inject", "Validators.required", "Validators.minLength", "Validators.maxLength", "this.questionsService.listQuestions", "this.answersService.listAnswersForQuestion", "this.questionsService.createQuestion", "this.answersService.generateAnswer", "this.router.navigate"], "published": ["QnaComponent"], "classes": [{"name": "QnaComponent", "description": "An Angular component managing Q&amp;A interactions, sidebar toggle, question/answer lists, and form handling."}], "methods": [{"name": "ngOnInit", "description": "Initializes component; sets up event listeners for sidebar toggle and fetches questions."}, {"name": "ngOnDestroy", "description": "Cleans up event listeners on component destruction."}, {"name": "toggleSidebar", "description": "Toggles the sidebar open/close state."}, {"name": "fetchQuestions", "description": "Fetches list of questions from QuestionsService."}, {"name": "onSelect", "description": "Sets selected question and loads corresponding answers."}, {"name": "loadAnswers", "description": "Loads answers for a specific question."}, {"name": "submitQuestion", "description": "Handles the submission of a new question, including API calls and generating AI answer."}], "calls": ["globalThis.addEventListener", "globalThis.removeEventListener", "this.questionsService.listQuestions", "this.answersService.listAnswersForQuestion", "this.questionsService.createQuestion", "this.answersService.generateAnswer", "this.router.navigate"], "search-terms": ["QnaComponent", "question-answer Angular", "sidebar toggle", "question form submission", "Angular event listener", "question service", "answer service"], "state": 2, "file_id": 40, "knowledge_revision": 110, "git_revision": "cde3852e4c59a5f54261ec2d056cc89a1e9e63a5", "revision_history": [{"81": ""}, {"104": "cde3852e4c59a5f54261ec2d056cc89a1e9e63a5"}, {"108": "cde3852e4c59a5f54261ec2d056cc89a1e9e63a5"}, {"110": "cde3852e4c59a5f54261ec2d056cc89a1e9e63a5"}], "ctags": [{"_type": "tag", "name": "QnaComponent", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^export class QnaComponent implements OnInit, OnDestroy {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "arr", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^            const arr = listeners[type] || [];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "arr", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^        const arr: Function[] = g.__listeners['globalToggleSidebar'] || [];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^    const payload = this.askForm.value as { title: string; body: string; };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^      const created = await this.questionsService.createQuestion(payload).toPromise();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "fb", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^  private fb = inject(FormBuilder);$/", "language": "TypeScript", "kind": "property", "scope": "QnaComponent", "scopeKind": "class"}, {"_type": "tag", "name": "g", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^      const g: any = globalThis as any;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "generated", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^        const generated = await this.answersService.generateAnswer({ question_id: created.id, us/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "listeners", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^        const listeners: Record<string, Function[]> = (g.__listeners ||= {});$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "originalDispatch", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^        const originalDispatch = g.dispatchEvent?.bind(g);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^    const payload = this.askForm.value as { title: string; body: string; };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^            const arr = listeners[type] || [];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/code-generation/question-and-answer-platform-3111-3121/qna_frontend/src/app/pages/qna/qna.component.ts", "pattern": "/^            const type = e?.type;$/", "language": "TypeScript", "kind": "constant"}], "hash": "393ff6f6c8abd0f2a6eca5c0c378130c", "format-version": 4, "code-base-name": "qna_frontend", "filename": "qna_frontend/src/app/pages/qna/qna.component.ts", "fields": [{"name": "private fb = inject(FormBuilder);", "scope": "QnaComponent", "scopeKind": "class", "description": "unavailable"}]}